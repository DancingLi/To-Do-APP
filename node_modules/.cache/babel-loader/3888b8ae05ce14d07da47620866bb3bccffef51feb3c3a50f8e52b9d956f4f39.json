{"ast":null,"code":"var _jsxFileName = \"E:\\\\OneDrive\\\\PythonTool\\\\To-do Checklist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport TaskList from './components/TaskList';\nimport ProgressChart from './components/ProgressChart';\nimport ThemeToggle from './components/ThemeToggle';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useLocalStorage('tasks', []);\n  const [progressData, setProgressData] = useLocalStorage('progressData', []);\n  const updateProgress = currentTasks => {\n    const today = new Date().toISOString().split('T')[0];\n    if (currentTasks.length === 0) {\n      // No tasks for today\n      return;\n    }\n    const todaysTasks = currentTasks.filter(task => task.date === today);\n    const completedTasks = todaysTasks.filter(task => task.completed);\n    const completionRate = todaysTasks.length > 0 ? Math.round(completedTasks.length / todaysTasks.length * 100) : 0;\n\n    // Add or update today's entry\n    const existingEntryIndex = progressData.findIndex(entry => entry.date === today);\n    if (existingEntryIndex !== -1) {\n      // Update existing entry\n      const updatedProgressData = [...progressData];\n      updatedProgressData[existingEntryIndex] = {\n        date: today,\n        completionRate\n      };\n      setProgressData(updatedProgressData);\n    } else {\n      // Add new entry\n      setProgressData([...progressData, {\n        date: today,\n        completionRate\n      }]);\n    }\n  };\n\n  // Initialize progress data on first load\n  useEffect(() => {\n    if (tasks.length > 0 && progressData.length === 0) {\n      updateProgress(tasks);\n    }\n  }, [tasks]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-200\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8 max-w-3xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold\",\n          children: \"Daily To-Do Checklist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThemeToggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 mb-6\",\n        children: /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: tasks,\n          setTasks: setTasks,\n          updateProgress: updateProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), progressData.length > 0 && /*#__PURE__*/_jsxDEV(ProgressChart, {\n        progressData: progressData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K8XwyghSLvi19ye+PHg+ky3c04s=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","TaskList","ProgressChart","ThemeToggle","useLocalStorage","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","progressData","setProgressData","updateProgress","currentTasks","today","Date","toISOString","split","length","todaysTasks","filter","task","date","completedTasks","completed","completionRate","Math","round","existingEntryIndex","findIndex","entry","updatedProgressData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/OneDrive/PythonTool/To-do Checklist/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport TaskList from './components/TaskList';\r\nimport ProgressChart from './components/ProgressChart';\r\nimport ThemeToggle from './components/ThemeToggle';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useLocalStorage('tasks', []);\r\n  const [progressData, setProgressData] = useLocalStorage('progressData', []);\r\n\r\n  const updateProgress = (currentTasks) => {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    \r\n    if (currentTasks.length === 0) {\r\n      // No tasks for today\r\n      return;\r\n    }\r\n    \r\n    const todaysTasks = currentTasks.filter(task => task.date === today);\r\n    const completedTasks = todaysTasks.filter(task => task.completed);\r\n    const completionRate = todaysTasks.length > 0 \r\n      ? Math.round((completedTasks.length / todaysTasks.length) * 100)\r\n      : 0;\r\n    \r\n    // Add or update today's entry\r\n    const existingEntryIndex = progressData.findIndex(entry => entry.date === today);\r\n    \r\n    if (existingEntryIndex !== -1) {\r\n      // Update existing entry\r\n      const updatedProgressData = [...progressData];\r\n      updatedProgressData[existingEntryIndex] = {\r\n        date: today,\r\n        completionRate,\r\n      };\r\n      setProgressData(updatedProgressData);\r\n    } else {\r\n      // Add new entry\r\n      setProgressData([...progressData, { date: today, completionRate }]);\r\n    }\r\n  };\r\n\r\n  // Initialize progress data on first load\r\n  useEffect(() => {\r\n    if (tasks.length > 0 && progressData.length === 0) {\r\n      updateProgress(tasks);\r\n    }\r\n  }, [tasks]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-200\">\r\n      <div className=\"container mx-auto px-4 py-8 max-w-3xl\">\r\n        <div className=\"flex justify-between items-center mb-8\">\r\n          <h1 className=\"text-2xl font-bold\">Daily To-Do Checklist</h1>\r\n          <ThemeToggle />\r\n        </div>\r\n        \r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 mb-6\">\r\n          <TaskList \r\n            tasks={tasks} \r\n            setTasks={setTasks} \r\n            updateProgress={updateProgress} \r\n          />\r\n        </div>\r\n        \r\n        {progressData.length > 0 && (\r\n          <ProgressChart progressData={progressData} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}