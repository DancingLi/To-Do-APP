{"ast":null,"code":"var _jsxFileName = \"E:\\\\OneDrive\\\\PythonTool\\\\To-do Checklist\\\\src\\\\components\\\\TaskCard.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCard = ({\n  id,\n  index,\n  task,\n  moveTask,\n  toggleComplete,\n  removeTask\n}) => {\n  _s();\n  const ref = useRef(null);\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: 'TASK',\n    item: {\n      id,\n      index\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const [, drop] = useDrop({\n    accept: 'TASK',\n    hover: (item, monitor) => {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      moveTask(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    }\n  });\n  drag(drop(ref));\n\n  // Add a function to determine the priority class\n  const getPriorityClass = priority => {\n    switch (priority) {\n      case 'Low':\n        return 'bg-green-100 border-green-400 dark:bg-green-900 dark:border-green-700';\n      case 'High':\n        return 'bg-red-100 border-red-400 dark:bg-red-900 dark:border-red-700';\n      default:\n        // Medium\n        return 'bg-yellow-100 border-yellow-400 dark:bg-yellow-900 dark:border-yellow-700';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: `p-4 mb-2 rounded-lg shadow-sm task-transition ${isDragging ? 'opacity-50' : 'opacity-100'} ${task.completed ? 'bg-green-100 dark:bg-green-900' : 'bg-white dark:bg-gray-800'} ${task.priority && !task.completed ? `border-l-4 ${getPriorityClass(task.priority)}` : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleComplete(task.id),\n          className: \"w-5 h-5 mr-3 rounded form-checkbox text-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: `font-medium text-gray-800 dark:text-gray-100 ${task.completed ? 'line-through' : ''}`,\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mt-1 space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500 dark:text-gray-400\",\n              children: task.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), task.priority && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `text-xs px-2 py-0.5 rounded-full ${task.priority === 'Low' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : task.priority === 'High' ? 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200' : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'}`,\n              children: task.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeTask(task.id),\n        className: \"text-red-500 hover:text-red-700 dark:text-red-400\",\n        \"aria-label\": \"Delete task\",\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCard, \"NhWktmaT6odXO71L2sFctYcYYb8=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useRef","useDrag","useDrop","jsxDEV","_jsxDEV","TaskCard","id","index","task","moveTask","toggleComplete","removeTask","_s","ref","isDragging","drag","type","item","collect","monitor","drop","accept","hover","current","dragIndex","hoverIndex","getPriorityClass","priority","className","completed","children","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","title","category","onClick","_c","$RefreshReg$"],"sources":["E:/OneDrive/PythonTool/To-do Checklist/src/components/TaskCard.js"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nconst TaskCard = ({ id, index, task, moveTask, toggleComplete, removeTask }) => {\r\n  const ref = useRef(null);\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: 'TASK',\r\n    item: { id, index },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const [, drop] = useDrop({\r\n    accept: 'TASK',\r\n    hover: (item, monitor) => {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      moveTask(dragIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  drag(drop(ref));\r\n\r\n  // Add a function to determine the priority class\r\n  const getPriorityClass = (priority) => {\r\n    switch(priority) {\r\n      case 'Low':\r\n        return 'bg-green-100 border-green-400 dark:bg-green-900 dark:border-green-700';\r\n      case 'High':\r\n        return 'bg-red-100 border-red-400 dark:bg-red-900 dark:border-red-700';\r\n      default: // Medium\r\n        return 'bg-yellow-100 border-yellow-400 dark:bg-yellow-900 dark:border-yellow-700';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div \r\n      ref={ref}\r\n      className={`p-4 mb-2 rounded-lg shadow-sm task-transition ${\r\n        isDragging ? 'opacity-50' : 'opacity-100'\r\n      } ${\r\n        task.completed ? \r\n        'bg-green-100 dark:bg-green-900' : \r\n        'bg-white dark:bg-gray-800'\r\n      } ${\r\n        task.priority && !task.completed ? `border-l-4 ${getPriorityClass(task.priority)}` : ''\r\n      }`}\r\n    >\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={task.completed}\r\n            onChange={() => toggleComplete(task.id)}\r\n            className=\"w-5 h-5 mr-3 rounded form-checkbox text-blue-600\"\r\n          />\r\n          <div>\r\n            <p className={`font-medium text-gray-800 dark:text-gray-100 ${\r\n              task.completed ? 'line-through' : ''\r\n            }`}>\r\n              {task.title}\r\n            </p>\r\n            <div className=\"flex items-center mt-1 space-x-2\">\r\n              <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                {task.category}\r\n              </span>\r\n              \r\n              {/* Add priority badge */}\r\n              {task.priority && (\r\n                <span className={`text-xs px-2 py-0.5 rounded-full ${\r\n                  task.priority === 'Low' \r\n                    ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' \r\n                    : task.priority === 'High'\r\n                      ? 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'\r\n                      : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'\r\n                }`}>\r\n                  {task.priority}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button \r\n          onClick={() => removeTask(task.id)}\r\n          className=\"text-red-500 hover:text-red-700 dark:text-red-400\"\r\n          aria-label=\"Delete task\"\r\n        >\r\n          âœ•\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}